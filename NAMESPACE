# Generated by roxygen2: do not edit by hand

S3method(makeRLearner,classif.mcsvm2)
S3method(makeRLearner,classif.ocsvm2)
S3method(predictLearner,classif.mcsvm2)
S3method(predictLearner,classif.ocsvm2)
S3method(print,ngs.prop)
S3method(print,sample.prop)
S3method(trainLearner,classif.mcsvm2)
S3method(trainLearner,classif.ocsvm2)
export(BASEDIR)
export(PERF_PREFIX)
export(SAMTOOLS_EXE)
export(STATUS_LEVELS)
export(SV)
export(SV_TYPES)
export(TMPDIR)
export(addStatusToBiotecTest)
export(addStatusToTestFromSim)
export(applyOneClassSVM)
export(assessClippedBasesInRegion)
export(checkFile)
export(cleanVirtualPatientData)
export(createPatient)
export(doMapping)
export(drawSamples)
export(evalLearners2)
export(evalLearners_OLD)
export(evalScreen)
export(evaluateOneClassSVM)
export(exploreClipping_BAM)
export(exploreClipping_G)
export(findClippedPeaks_G_OLD)
export(findCoveredRegionsInTarget)
export(generatePatientReadStore)
export(getClippedBasePositions)
export(getFeatureDataFromPatient)
export(getFeaturesFromMapping)
export(getFeaturesFromMappings)
export(getPatNbr)
export(getPatStr)
export(getPatientIds)
export(getPatientMappingInfo)
export(getReadCountsFromMapping)
export(getTargetRegions)
export(getVirtualPatientFeatures)
export(getVirtualPatientPath)
export(harvestLearnerPerformanceEvaluations_OLD)
export(harvestPerformanceEvaluations)
export(lineCount)
export(localMax)
export(mapWrapper)
export(ngs.prop)
export(ocSVMTune)
export(parseNGSProp)
export(parseSampleProp)
export(plotLearnerPerformance)
export(plotScreenPerformance)
export(processVirtualPatients)
export(sample.prop)
export(setupParallel)
export(subSampleFastq)
export(subsampleInd)
export(toString.ngs.prop)
export(toString.sample.prop)
import(Biostrings)
import(GenomicAlignments)
import(GenomicRanges)
import(IRanges)
import(RcppRoll)
import(Rsamtools)
import(XVector)
import(bitops)
import(doParallel)
import(foreach)
import(ggplot2)
import(logging)
import(mlr)
import(rtracklayer)
importFrom(dplyr,arrange)
importFrom(dplyr,filter)
importFrom(dplyr,full_join)
importFrom(dplyr,group_by)
importFrom(dplyr,n)
importFrom(dplyr,select)
importFrom(dplyr,summarise)
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
useDynLib(svmod)
